apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: zero2cd
spec:
  params:
    - name: registry
      default: index.docker.io/andreaf76
      type: string
    - name: revision
      default: main
      type: string
    - name: target
      default: app
      type: string
  workspaces:
    - name: source
    - name: dockerconfig
      optional: true
  results:
    - name: git-sha
      description: the git sha that has been built
      value: $(tasks.clone.results.commit)
    - name: image-sha
      description: the sha of the target container image
      value: $(tasks.build.results.IMAGE_DIGEST)
  tasks:
    - name: clone
      taskRef:
        name: git-clone
      params:
        - name: url
          value: https://github.com/afrittoli/zero_to_tekton
        - name: revision
          value: $(params.revision)
      workspaces:
        - name: output
          workspace: source
    - name: lint
      runAfter: ['clone']
      taskRef:
        name: pylint
      params:
        - name: path
          value: cats
        - name: args
          value: ["-r", "y"]
      workspaces:
        - name: source
          workspace: source
          subPath: app
    - name: unit
      runAfter: ['clone']
      taskRef:
        name: pytest
      workspaces:
        - name: source
          workspace: source
          subPath: app
    - name: vulnerabilities
      runAfter: ['unit', 'lint']
      taskRef:
        name: snyk-python
      workspaces:
        - name: source
          workspace: source
          subPath: app
    - name: sbom
      runAfter: ['vulnerabilities']
      taskRef:
        name: cyclonedx-python
      workspaces:
        - name: source
          workspace: source
          subPath: app
    - name: build
      runAfter: ['sbom']
      taskRef:
        name: kaniko
      params:
        - name: IMAGE
          value: $(params.registry)/zero2tekton:$(tasks.clone.results.commit)
      workspaces:
        - name: source
          workspace: source
        - name: dockerconfig
          workspace: dockerconfig
    - name: deploy
      runAfter: ['build']
      taskSpec:
        params:
          - name: image
            type: string
          - name: target
            type: string
            description: the suffix of the service and deployment (cnd-<suffix>)
        results:
          - name: url
            description: the URL where the app is deployed to
        steps:
          - name: deploy
            image: docker.io/bitnami/kubectl@sha256:792e0aaabee6c51d734b5d3b150ba990d6106c4c081731d8570c1b9afe0c52d9
            script: |
              #!/bin/sh
              set -ex

              # Try to create a deployment, in case it's our first run
              kubectl create deployment z2t-$(params.target) --image $(params.image) || true

              # Update the deployment, rollout new image
              kubectl set image deployment/z2t-$(params.target) *=$(params.image)

              # Create a service if it doesn't exists yet
              kubectl expose deployment/z2t-$(params.target) --port 8080 --target-port 80 || true

              # Make sure we run at least two pods
              kubectl scale --replicas=2 deployment/z2t-$(params.target)
          - name: create-route
            image: image-registry.openshift-image-registry.svc:5000/openshift/cli:latest
            script: |
              #!/usr/bin/env bash

              oc expose service z2t-$(params.target) || echo "Route already there"
      params:
        - name: image
          value: $(params.registry)/zero2tekton@$(tasks.build.results.IMAGE_DIGEST)
        - name: target
          value: $(params.target)
