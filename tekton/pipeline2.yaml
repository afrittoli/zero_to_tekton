apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: zero2cd
spec:
  params:
    - name: registry
      default: uk.icr.io/tekton
    - name: revision
      default: main
  workspaces:
    - name: source
    - name: dockerconfig
      optional: true
  results:
    - name: git-sha
      description: the git sha that has been built
      value: $(tasks.clone.results.commit)
    - name: image-sha
      description: the sha of the target container image
      value: $(tasks.build.results.IMAGE-DIGEST)
  tasks:
    - name: clone
      taskRef:
        name: git-clone
      params:
        - name: url
          value: https://github.com/afrittoli/zero_to_tekton
        - name: revision
          value: $(params.revision)
      workspaces:
        - name: output
          workspace: source
    - name: build
      runAfter: ['clone']
      taskRef:
        name: kaniko
      params:
        - name: IMAGE
          value: $(params.registry)/zero2tekton:$(tasks.clone.results.commit)
        - name: CONTEXT
          value: image
      workspaces:
        - name: source
          workspace: source
        - name: dockerconfig
          workspace: dockerconfig
    - name: deploy
      runAfter: ['build']
      taskSpec:
        params:
          - name: image
        steps:
          - name: deploy
            image: bitnami/kubectl:latest
            script: |
              #!/bin/sh
              set -ex

              # Try to create a deployment, in case it's our first run
              kubectl create deployment cnd-demo --image $(params.image) || true

              # Update the deployment, rollout new image
              kubectl set image deployment/cnd-demo *=$(params.image)

              # Create a service if it doesn't exists yet
              kubectl expose deployment/cnd-demo --port 8080 --target-port 80

              # Make sure we run at least two pods
              k scale --replicas=2 deployment/cnd-demo
      params:
        - name: image
          value: $(params.registry)/zero2tekton@$(tasks.build.results.IMAGE-DIGEST)